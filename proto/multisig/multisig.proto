syntax = "proto3";
package multisig;

option go_package = "bitbucket.org/decimalteam/go-node/x/multisig/types";

import "gogoproto/gogo.proto";
import "cosmos_proto/base/coin.proto";

message Transaction {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = false;

  string ID = 1 [
    (gogoproto.jsontag) = "id",
    (gogoproto.moretags) = "yaml:\"id\""
  ];
  string Wallet = 2 [
    (gogoproto.jsontag) = "wallet",
    (gogoproto.moretags) = "yaml:\"wallet\""
  ];
  string Receiver = 3 [
    (gogoproto.jsontag) = "receiver",
    (gogoproto.moretags) = "yaml:\"receiver\""
  ];
  repeated cosmos_proto.Coin Coins = 4 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "coins",
    (gogoproto.moretags) = "yaml:\"coins\""
  ];
  repeated string Signers = 5 [
    (gogoproto.jsontag) = "signers",
    (gogoproto.moretags) = "yaml:\"signers\""
  ];
  int64 CreatedAt = 6 [
    (gogoproto.jsontag) = "created_at",
    (gogoproto.moretags) = "yaml:\"created_at\""
  ];
}

message Wallet {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = false;

  string Address = 1 [
    (gogoproto.jsontag) = "address",
    (gogoproto.moretags) = "yaml:\"address\""
  ];
  repeated string Owners = 2 [
    (gogoproto.jsontag) = "owners",
    (gogoproto.moretags) = "yaml:\"owners\""
  ];
  repeated uint64 Weights = 3 [
    (gogoproto.jsontag) = "weights",
    (gogoproto.moretags) = "yaml:\"weights\""
  ];
  uint64 Threshold = 4 [
    (gogoproto.jsontag) = "threshold",
    (gogoproto.moretags) = "yaml:\"threshold\""
  ];
}
