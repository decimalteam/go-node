syntax = "proto3";
package gov;

option go_package = "bitbucket.org/decimalteam/go-node/x/gov/types";

import "gogoproto/gogo.proto";

message Vote {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  uint64 ProposalID = 1 [
    (gogoproto.jsontag) = "proposal_id",
    (gogoproto.moretags) = "yaml:\"proposal_id\""
  ];
  bytes Voter = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.ValAddress",
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "voter",
    (gogoproto.moretags) = "yaml:\"voter\""
  ];
  // VoteOption
  bytes Option = 3 [
    (gogoproto.jsontag) = "option",
    (gogoproto.moretags) = "yaml:\"option\""
  ];
}

message Content {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string Title = 1 [
    (gogoproto.jsontag) = "title",
    (gogoproto.moretags) = "yaml:\"title\""
  ];
  string Description = 2 [
    (gogoproto.jsontag) = "description",
    (gogoproto.moretags) = "yaml:\"description\""
  ];
}

message ValidatorGovInfo {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  bytes Address = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.ValAddress",
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "address",
    (gogoproto.moretags) = "yaml:\"address\""
  ];
  bytes BondedTokens = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "bonded_tokens",
    (gogoproto.moretags) = "yaml:\"bonded_tokens\""
  ];
  bytes Vote = 3 [
    (gogoproto.jsontag) = "vote",
    (gogoproto.moretags) = "yaml:\"vote\""
  ];
}

message TallyResult {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = false;

  bytes Yes = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "yes",
    (gogoproto.moretags) = "yaml:\"yes\""
  ];
  bytes Abstain = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "abstain",
    (gogoproto.moretags) = "yaml:\"abstain\""
  ];
  bytes No = 3 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "no",
    (gogoproto.moretags) = "yaml:\"no\""
  ];
}

message TallyParams {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = false;

  bytes Quorum = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "quorum",
    (gogoproto.moretags) = "yaml:\"quorum\""
  ];
  bytes Threshold = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "threshold",
    (gogoproto.moretags) = "yaml:\"threshold\""
  ];
}

message Proposal {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = false;

  Content Content = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "content",
    (gogoproto.moretags) = "yaml:\"content\""
  ];
  uint64 ProposalID = 2 [
    (gogoproto.jsontag) = "proposal_id",
    (gogoproto.moretags) = "yaml:\"proposal_id\""
  ];
  int32 Status = 3;
  TallyResult FinalTallyResult = 4 [
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "final_tally_result",
    (gogoproto.moretags) = "yaml:\"final_tally_result\""
  ];
  uint64 VotingStartBlock = 5 [
    (gogoproto.jsontag) = "voting_start_block",
    (gogoproto.moretags) = "yaml:\"voting_start_block\""
  ];
  uint64 VotingEndBlock = 6 [
    (gogoproto.jsontag) = "voting_end_block",
    (gogoproto.moretags) = "yaml:\"voting_end_block\""
  ];
}
