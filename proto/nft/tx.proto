syntax = "proto3";
package nft;

option go_package = "bitbucket.org/decimalteam/go-node/x/nft/types";

import "gogoproto/gogo.proto";

service Msg {
  rpc TransferNFT(MsgTransferNFT) returns (MsgTransferNFTResponse);
  rpc EditNFTMetadata(MsgEditNFTMetadata) returns (MsgEditNFTMetadataResponse);
  rpc DelegateNFT(MsgDelegateNFT) returns (MsgDelegateNFTResponse);
}

message MsgMintNFT {
  bytes Sender = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.AccAddress",
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "sender"
  ];
  bytes Recipient = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.AccAddress",
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "recipient"
  ];
  string ID = 3 [
    (gogoproto.jsontag) = "id"
  ];
  string Denom = 4 [
    (gogoproto.jsontag) = "denom"
  ];
  bytes Quantity = 5 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "quantity"
  ];
  string TokenURI = 6 [
    (gogoproto.jsontag) = "token_uri"
  ];
  bytes Reserve = 7 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "reserve"
  ];
  bool AllowMint = 8 [
    (gogoproto.jsontag) = "allow_mint"
  ];
}

message MsgTransferNFT {
  bytes Sender = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.AccAddress",
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "sender"
  ];
  bytes Recipient = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.AccAddress",
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "recipient"
  ];
  string ID = 3 [
    (gogoproto.jsontag) = "id"
  ];
  string Denom = 4 [
    (gogoproto.jsontag) = "denom"
  ];
  bytes Quantity = 5 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "quantity"
  ];
}

message MsgTransferNFTResponse {}

message MsgEditNFTMetadata {
  bytes Sender = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.AccAddress",
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "sender"
  ];
  string ID = 2 [
    (gogoproto.jsontag) = "id"
  ];
  string Denom = 3 [
    (gogoproto.jsontag) = "denom"
  ];
  string TokenURI = 5 [
    (gogoproto.jsontag) = "token_uri"
  ];
}

message MsgEditNFTMetadataResponse {}

message MsgDelegateNFT {
  bytes DelegatorAddress = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.AccAddress",
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "delegator_address"
  ];
  bytes ValidatorAddress = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.ValAddress",
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "validator_address"
  ];
  string ID = 3 [
    (gogoproto.jsontag) = "id"
  ];
  string Denom = 4 [
    (gogoproto.jsontag) = "denom"
  ];
  bytes Quantity = 5 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "quantity"
  ];
}

message MsgDelegateNFTResponse {}

message MsgBurnNFT {
  bytes Sender = 1 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.AccAddress",
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "sender"
  ];
  string ID = 2 [
    (gogoproto.jsontag) = "id"
  ];
  string Denom = 3 [
    (gogoproto.jsontag) = "denom"
  ];
  bytes Quantity = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false,
    (gogoproto.jsontag) = "quantity"
  ];
}