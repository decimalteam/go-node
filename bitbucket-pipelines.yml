image: python:3.8.2

definitions:
  build-script: &build
    image: centos:centos8
    caches:
      - go-src
      - go-pkg
    script:
      - dnf install -y epel-release
      - dnf install -y golang leveldb leveldb-devel snappy
      - dnf groupinstall -y "Development Tools"
      - export GOPATH=~/go
      - PACKAGE_PATH="${GOPATH}/src/bitbucket.org/${BITBUCKET_REPO_FULL_NAME}"
      - mkdir -pv "${PACKAGE_PATH}"
      - tar -cO --exclude-vcs --exclude=bitbucket-pipelines.yml . | tar -xv -C "${PACKAGE_PATH}"
      - export GO111MODULE=on
      - cd "${PACKAGE_PATH}"
      - go get ./...
      - go test ./...
      - make all
      - mkdir ${BITBUCKET_CLONE_DIR}/build
      - cp ${GOPATH}/bin/* ${BITBUCKET_CLONE_DIR}/build
    artifacts:
      - build/deccli
      - build/decd

  deploy-script: &deploy
    caches:
      - pip
    script:
      - MESSAGE=`git log --format=%B -n 1 $BITBUCKET_COMMIT` # getting commit message
      - pip3 install ansible==2.9.8

      - chmod 700 ci-scripts/ansible
      - cd ci-scripts/ansible

      # run update playbook
      - if [[ $MESSAGE == *\[update\]* ]]; then
        ansible-playbook -i "$MASTER_HOSTS, $SLAVE_HOSTS" -e "ansible_user=$USERNAME chain_id=$CHAIN_ID artifacts=$BITBUCKET_CLONE_DIR/build" decimal-nodes-update.yml;
        else echo 0; fi

      # run reset playbook for MASTER HOSTS
      - if [[ $MESSAGE == *\[reset\]* ]]; then
        ansible-playbook -i "$MASTER_HOSTS" -e "ansible_user=$USERNAME mode=master chain_id=$CHAIN_ID artifacts=$BITBUCKET_CLONE_DIR/build persistent_peers=$PERSISTENT_PEERS" decimal-nodes-init.yml;
        else echo 0; fi

      # run reset playbook for EXPLORER HOSTS
      - if [[ $MESSAGE == *\[reset\]* ]]; then
        ansible-playbook -i "$EXPLORER_HOSTS" -e "ansible_user=$USERNAME" decimal-explorer-init.yml;
        else echo 0; fi

      # run reset playbook for SLAVE HOSTS
      - if [[ $MESSAGE == *\[reset\]* ]]; then
        ansible-playbook -i "$SLAVE_HOSTS" -e "ansible_user=$USERNAME mode=slave chain_id=$CHAIN_ID artifacts=$BITBUCKET_CLONE_DIR/build src_genesis=$SRC_GENESIS persistent_peers=$PERSISTENT_PEERS" decimal-nodes-init.yml;
        else echo 0; fi

  caches:
    pip: ~/.cache/pip
    go-src: ~/go/src
    go-pkg: ~/go/pkg

pipelines:
  branches:
    staging:
      - step:
          name: Build
          <<: *build
      - step:
          name: Deploy
          deployment: Staging
          <<: *deploy          

    develop:
      - step:
          name: Build
          <<: *build
      - step:
          name: Deploy
          deployment: Test
          <<: *deploy

  custom:
    build-and-deploy-binary-files-to-repo:
      - parallel:
          - step:
              name: Build on Centos 8.4.2105
              image: centos:centos8.4.2105
              caches:
                - go-src
                - go-pkg
              script:
                - dnf install -y epel-release
                - dnf install -y golang leveldb leveldb-devel snappy
                - dnf groupinstall -y "Development Tools"
                - export GOPATH=~/go
                - PACKAGE_PATH="${GOPATH}/src/bitbucket.org/${BITBUCKET_REPO_FULL_NAME}"
                - mkdir -pv "${PACKAGE_PATH}"
                - tar -cO --exclude-vcs --exclude=bitbucket-pipelines.yml . | tar -xv -C "${PACKAGE_PATH}"
                - export GO111MODULE=on
                - cd "${PACKAGE_PATH}"
                - go get ./...
                - go test ./...
                - make all
                - mkdir -p ${BITBUCKET_CLONE_DIR}/build/centos8.4/
                - cp ${GOPATH}/bin/* ${BITBUCKET_CLONE_DIR}/build/centos8.4/
              artifacts:
                - build/centos8.4/deccli
                - build/centos8.4/decd

          - step:
              name: Build on Ubuntu 20.04
              image: ubuntu:20.04
              caches:
                - go-src
                - go-pkg
              script:
                - apt-get install -y build-essential
                - apt-get install -y golang libsnappy-dev libleveldb-dev
                - export GOPATH=~/go
                - PACKAGE_PATH="${GOPATH}/src/bitbucket.org/${BITBUCKET_REPO_FULL_NAME}"
                - mkdir -pv "${PACKAGE_PATH}"
                - tar -cO --exclude-vcs --exclude=bitbucket-pipelines.yml . | tar -xv -C "${PACKAGE_PATH}"
                - export GO111MODULE=on
                - cd "${PACKAGE_PATH}"
                - go get ./...
                - go test ./...
                - make all
                - mkdir -p ${BITBUCKET_CLONE_DIR}/build/ubuntu20.04/
                - cp ${GOPATH}/bin/* ${BITBUCKET_CLONE_DIR}/build/ubuntu20.04/
              artifacts:
                - build/ubuntu20.04/deccli
                - build/ubuntu20.04/decd



