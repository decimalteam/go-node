image: golang:1.14

pipelines:
  branches:
    develop:
      - step:
          name: Build
          script:
            - PACKAGE_PATH="${GOPATH}/src/bitbucket.org/${BITBUCKET_REPO_FULL_NAME}"
            - mkdir -pv "${PACKAGE_PATH}"
            - tar -cO --exclude-vcs --exclude=bitbucket-pipelines.yml . | tar -xv -C "${PACKAGE_PATH}"
            - export GO111MODULE=on
            - cd "${PACKAGE_PATH}"
            - go get ./...
            - make all
            - mkdir ${BITBUCKET_CLONE_DIR}/build
            - cp ${GOPATH}/bin/* ${BITBUCKET_CLONE_DIR}/build
          artifacts:
            - build/deccli
            - build/decd

      - step:
          name: Run deployment scripts if it is needed
          image: python:3.8.2
          deployment: testnet
          caches:
            - pip
          script:
            - MESSAGE=`git log --format=%B -n 1 $BITBUCKET_COMMIT` # getting commit message
            - pip install ansible==2.9.7

            - chmod 700 ci-scripts/ansible
            - cd ci-scripts/ansible

            # run update playbook
            - if [[ $MESSAGE == *\[update\]* ]]; then
              ansible-playbook -i "$MASTER_HOSTS, $SLAVE_HOSTS" -e "ansible_user=$USERNAME artifacts=$BITBUCKET_CLONE_DIR/build" decimal-nodes-update.yml;
              else echo 0; fi

            # run reset playbook for MASTER HOSTS
            - if [[ $MESSAGE == *\[reset\]* ]]; then
              ansible-playbook -i "$MASTER_HOSTS" -e "ansible_user=$USERNAME mode=master chain_id=$CHAIN_ID artifacts=$BITBUCKET_CLONE_DIR/build" decimal-nodes-init.yml;
              else echo 0; fi

            # run reset playbook for SLAVE HOSTS
            - if [[ $MESSAGE == *\reset\* ]]; then
              ansible-playbook -i "$SLAVE_HOSTS" -e "ansible_user=$USERNAME mode=slave chain_id=$CHAIN_ID artifacts=$BITBUCKET_CLONE_DIR/build src_genesis=$SRC_GENESIS" decimal-nodes-init.yml;
              else echo 0; fi

definitions:
  caches:
    pip: ~/.cache/pip
